var g=Object.defineProperty;var h=(i,t,e)=>t in i?g(i,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):i[t]=e;var a=(i,t,e)=>(h(i,typeof t!="symbol"?t+"":t,e),e);class v{constructor(t,e,s){a(this,"svgWidth");a(this,"svgHeight");a(this,"margin");this.svgWidth=t,this.svgHeight=e,this.margin=s}get width(){return this.svgWidth-this.margin.left-this.margin.right-this.margin.xlabel}get height(){return this.svgHeight-this.margin.top-this.margin.bottom-this.margin.ylabel}}class c{constructor(t){a(this,"data");this.data=JSON.parse(t)}getHeader(){return this.data.header}getDataSets(){return this.data.dataSets}getStructure(){return this.data.structure}getObservationsBySeries(t){const e=this.data.dataSets[0].series[t];return e?Object.values(e.observations):void 0}getObservationsByRefArea(t){const e=this.getSeriesIdByRefArea(t);return e?this.data.dataSets[0].series[e].observations:void 0}getSeriesIdByRefArea(t){const e=this.data.structure.dimensions.series.find(r=>r.id==="REF_AREA");if(!e)return;const s=e.values.find(r=>r.id===t);return s?`0:0:0:0:0:0:${e.values.indexOf(s)}:0`:void 0}getRefAreas(){const t=this.data.structure.dimensions.series.find(e=>e.id==="REF_AREA");return t?t.values:[]}getTimePeriods(){const t=this.data.structure.dimensions.observation.find(e=>e.id==="TIME_PERIOD");return t?t.values:[]}getObservationsByYear(t){const e=this.getTimePeriods(),s=e==null?void 0:e.findIndex(n=>n.id===t);if(s===void 0||s===-1)return;const r={};return Object.entries(this.getDataSets()[0].series).forEach(([n,d])=>{const o=d.observations[s.toString()];o!==void 0&&(r[n]=o)}),Object.keys(r).length>0?r:void 0}}export{c as S,v as a};
